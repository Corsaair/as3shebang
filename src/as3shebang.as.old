
/* as3shebang:
   command-line utility to run AS3 scripts as executable shell scripts

   install:
   copy the as3shebang executable into /usr/bin
   
   usage:
   1. create a script file
   $ touch myscript.as

   2. make it executable
   $ chmod +x myscript.as

   3. as first line of your script define the shebang line
   $ pico myscript.as
   --------
   #!/usr/bin/as3shebang -- 
   trace( "hello world" );
   --------

   4. run
   $ ./myscript.as

   note:
   - you have to use exactly '#!/usr/bin/as3shebang -- '
     the path followed by "--" is mandatory otherwise it will not works
     that means you can directly pass user arguments
     but also that you can not configure the redshell options
     the path can change, eg. "/usr/bin/as3shebang"
     it could be "/usr/local/bin/as3shebang" etc.
   - the argv[0] which should contains the script name is removed at runtime
   - you can find the script name in the global variable "scriptname"
*/

package
{
    public var scriptname:String = "";
}

import shell.Program;
import shell.Runtime;
import shell.FileSystem;
import C.stdlib.*;

var as3sbv:String = "0.9";

if( Program.argv.length == 0 )
{
	trace( "[as3shebang " + as3sbv + "] no script arguments found" );
	exit( EXIT_FAILURE );
}

/*
trace( "args:" );
trace( "--------" );
for( var i:uint = 0; i < Program.argv.length; i++ )
{
	trace( "argv[" + i + "] = " + Program.argv[i] );
}
trace( "--------" );
trace( "Program.filename = " + Program.filename );
trace( "Program.startupDirectory = " + Program.startupDirectory );
trace( "--------" );
*/

//var scriptname:String = Program.argv[0];
//var scriptname:String = Program.argv.shift();
scriptname = Program.argv.shift();

var script:String = FileSystem.read( scriptname );
var source:String = "";

if( script.indexOf( "#!" ) == 0 )
{
	source = script.substring( script.indexOf( "\n" ) + 1 );
}
else
{
	trace( "[as3shebang " + as3sbv + "] no shebang found" );
  exit( EXIT_FAILURE );
}

/*
trace( "source:" );
trace( "--------" );
trace( source );
trace( "--------" );
*/

/* NOTE:
   alternative to remove the shebang line and create a temporary AS3 script file
   ran by the redshell, that we expect to be installed in /usr/bin/redshell
   ideally we woudl want to detect the env var REDTAMARIN_SDK and run the
   redshell from /sdk/redtamarin/runtimes/redhsell/{OPERATING_SYSTEM}/{ARCH}/redshell
*/
/*
var options:String = "";
    options += " -Dastrace 1 ";

var args:String = "";

if( Program.argv.length > 0 )
{
    args += " -- ";
    args += Program.argv.join( " " );
}


var scriptpath:String = FileSystem.absolutePath( scriptname );
    scriptpath += ".tmp";

FileSystem.write( scriptpath, source );

var exitcode:int = Program.exec( "/usr/bin/redshell " + options + scriptpath + args );

FileSystem.removeFile( scriptpath );

//trace( "exitcode: " + exitcode );
exit( exitcode );
*/

try
{
    Runtime.eval( source ); 
}
catch( e:Error )
{
    trace( e.getStackTrace() );
    exit( EXIT_FAILURE );
}

exit( EXIT_SUCCESS );
